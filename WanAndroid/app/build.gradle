apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
//apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {

        preDexLibraries true
        maxProcessCount 8
        javaMaxHeapSize "2048m"
    }
    defaultConfig {
        applicationId "com.vincent.wanandroid.kotlin"
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = [
                    "-Xjsr305=strict",
                    "-progressive"
            ]
            jvmTarget = "1.8"
        }
    }
    dataBinding {
        enabled = true
    }
    dependencies {
        testImplementation "junit:junit:4.12"
        androidTestImplementation "androidx.test.ext:junit:1.1.0"
        androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
        implementation fileTree(dir: "libs", include: ["*.jar"])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.versions.coroutines}"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.versions.coroutines}"
        implementation "androidx.appcompat:appcompat:${rootProject.ext.versions.appcompat}"
        implementation "androidx.core:core-ktx:${rootProject.ext.versions.core_ktx}"
        implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.versions.constraintlayout}"

        implementation "com.yinglan.alphatabs:library:${rootProject.ext.versions.alphatabs}"

        implementation "com.youth.banner:banner:${rootProject.ext.versions.banner}"

        api "com.just.agentweb:agentweb:${rootProject.ext.versions.agentweb}"
        implementation "androidx.recyclerview:recyclerview:${rootProject.ext.versions.recyclerview}"
        implementation "androidx.recyclerview:recyclerview-selection:${rootProject.ext.versions.recyclerview}"

        implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.versions.okhttp}"
        implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.versions.okhttp}"

        implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.versions.retrofit}"
        implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.versions.convertergson}"
        implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.versions.adapterrxjava}"
        implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.versions.rxandroid}"
        implementation "com.uber.autodispose:autodispose-android:${rootProject.ext.versions.autodispose}"
        implementation "com.uber.autodispose:autodispose:${rootProject.ext.versions.autodispose}"
        implementation "com.uber.autodispose:autodispose-android-archcomponents:${rootProject.ext.versions.autodispose}"


        implementation "com.github.bumptech.glide:glide:${rootProject.ext.versions.glide}"

        implementation "com.github.hackware1993:MagicIndicator:${rootProject.ext.versions.MagicIndicator}"

        implementation "com.nex3z:flow-layout:${rootProject.ext.versions.flow_layout}"

        implementation 'com.jcodecraeer:xrecyclerview:1.6.0'

        implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.versions.lifecycle_version}"
        implementation "androidx.lifecycle:lifecycle-reactivestreams:${rootProject.ext.versions.lifecycle_version}"
        annotationProcessor "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.versions.lifecycle_version}" // For Kotlin use kapt instead of annotationProcessor
        implementation "androidx.lifecycle:lifecycle-common-java8:${rootProject.ext.versions.lifecycle_version}"

        implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.versions.okhttp_version}"
        def paging_version = rootProject.ext.versions.paging_version

        implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx

        // alternatively - without Android dependencies for testing
        testImplementation "androidx.paging:paging-common:$paging_version" // For Kotlin use paging-common-ktx

        // optional - RxJava support
        implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use pag

        implementation 'com.ldoublem.loadingview:loadingviewlib:1.0'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:+'
    implementation 'androidx.constraintlayout:constraintlayout:+'
}
